name: CI/CD Workflow

on:
  push:
    branches:
      - main
      - next
      - 'feature/**'
      - 'hotfix/**'
      - 'fix/**'
  pull_request:
    branches:
      - main
      - next


jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

      - name: Run Tests
        run: pnpm test

      - name: Type Check
        run: pnpm typecheck

  changeset-check:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4

      - name: Check Changesets
        run: npx changeset status

  release:
    name: Release
    needs: [lint-and-test]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/next'
    permissions:
      contents: write
      pull-requests: write
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'pnpm'

      - name: Install Dependencies
        run: pnpm install

      - name: Create Release Pull Request or Publish
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm version
          publish: ${{ github.ref == 'refs/heads/main' && 'pnpm release' || (github.ref == 'refs/heads/next' && 'pnpm release:next') }}
          commit: 'chore(ci): version packages'
          setupGitUser: true
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}